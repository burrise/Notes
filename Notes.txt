When you commit you commit what was staged.
You could make a change to a file then stage it (git add) then make more changes. Now when you commit, you will commit what was staged, not the latest edition of the file. This allows you to work ahead between commits.

>git status
to see status of files.

>git add *
to add all files

Three options for commit:

1) commit staged files:
>git commit -m "reason for commit"

2) automatically commit local changes (can skip the add above):
>git commit -a -m "reason for commit"

3) commit certain files:
>git commit -m "reason for commit" file1 file2


When you are ready to push changes to public repository (eg github):
>git push origin master

Note, cat .git/config to see connection between origin and github. origin was set up earlier with a command like: git remote add origin git@...

What if you accidentally add a file? (eg. if you do git add * you might accidentally add an autosave file.) Use:

>git rm -f file

Git
---
Git is a free & open source, distributed version control system

Every Git clone is a full-fledged repository with complete history and full revision tracking capabilities, not dependent on network access or a central server. Branching and merging are fast and easy to do.

Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later.

